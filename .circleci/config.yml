version: 2.1
orbs:
  node: circleci/node@5.0.1
  docker: circleci/docker@2.1.4
  heroku: circleci/heroku@2.0.0
  snyk: snyk/snyk@1.5.0

# build job specifies the Docker image to use and defines the steps to be executed
# it checks out the code, installs packages, and installs dependencies using npm
jobs:
  build:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Install Dependencies
          command: |
            echo "Installing dependencies..."
            npm install

  # define the test job as a YAML anchor, which can be reused elsewhere
  # this defines the steps for the test job
  .test_definition:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run Tests
          command: |
            echo "Running tests..."
            npm run test

  # test job specifies the Docker image and references the .test_definition YAML anchor
  test:
    <<: *test_definition

  # build-and-push job uses the Docker executor, sets up a remote Docker environment,
  # checks out the code, builds a Docker image with a specific tag, and pushes the image to the Docker registry
  build-and-push:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: acetay/m4-node-app-for-devops
          tag: <<pipeline.git.tag>>
      - docker/push:
          image: acetay/m4-node-app-for-devops
          tag: <<pipeline.git.tag>>

  # deploy job specifies the Docker image, sets up a remote Docker environment,
  # installs the Heroku CLI, checks out the code, and pushes and releases the Heroku container
  deploy:
    docker:
      - image: cimg/node:16.10
    steps:
      - setup_remote_docker
      - heroku/install
      - checkout
      - run:
          name: Heroku Container Push
          command: |
            heroku container:login
            heroku container:push web -a ace-su-devops
            heroku container:release web -a ace-su-devops

# workflows section defines the pipeline structure and order of the jobs
# it also sets up filters to control when specific jobs should run based on branch updates and Git tags
# build and test jobs will only run when the main branch is updated
# build-and-push and deploy jobs will only run when a Git tag is created that starts with the letter "v"
# they will not run for any branch updates
workflows:
  simple_workflow:
    jobs:
      - build:
          filters:
            branches:
              only: main
      - test:
          requires:
            - build
          <<: *test_definition
          filters:
            branches:
              only: main
      - scan:
          requires:
            - build
          filters:
            branches:
              only: main
      - build-and-push:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - deploy:
          requires:
            - build-and-push
          filters:
            tags:
              only
